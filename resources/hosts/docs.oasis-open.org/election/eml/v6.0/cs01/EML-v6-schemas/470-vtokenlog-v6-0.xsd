<?xml version="1.0" encoding="utf-8"?>
<!--
  EML 470 Schema - vToken log

  History: 4.0 Edited by Paul Spencer (Boynings Consulting) 2005/2006
                - major release revision

           5.0 Edited by David RR Webber (OVS) 2007-02-07
           6.0 Edited by David RR Webber (OVS) 2008-11-13
  -->
<xs:schema targetNamespace="urn:oasis:names:tc:evs:schema:eml" xmlns="urn:oasis:names:tc:evs:schema:eml" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" attributeFormDefault="unqualified" version="6.0" id="eml-470">
 <xs:annotation>
    <xs:documentation> 
      Specification Name: OASIS EML TC - Election Markup Language (EML) 
      Description: This schema here is a member of a library of the XML schemas used in EML. The XML schemas define the formal structures of the election data that can be processed.
      Produced by: OASIS Election Technical Committee
      URL: http://www.oasis-open.org/committees/election
      Version: 6.0  
      Status: Committee Draft 
      Copyright: 2001-09, OASIS, http://www.oasis-open.org
      Conformance: This is a base implementation schema - actual localization schema for use may be derived from this schema - but may not contradict the structure definitions provided here.
    </xs:documentation>
  </xs:annotation>
	<xs:include schemaLocation="emlcore-v6-0.xsd"/>
	<xs:element name="EML">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="EMLstructure">
					<xs:sequence>
						<xs:element ref="VTokenLog"/>
					</xs:sequence>
					<xs:attribute name="Id" fixed="470" use="required"></xs:attribute>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<xs:unique name="DisplayOrder">
			<xs:selector xpath=".//*"/>
			<xs:field xpath="@DisplayOrder"/>
		</xs:unique>
	</xs:element>
	<xs:element name="VTokenLog">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="EventIdentifier" minOccurs="0"/>
				<xs:element ref="ElectionIdentifier" minOccurs="0"/>
				<xs:element ref="ContestIdentifier" minOccurs="0"/>
				<xs:element name="Update" type="YesNoType" minOccurs="0"/>
				<xs:element name="VTokens" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="VotingChannel" minOccurs="0"/>
							<xs:choice maxOccurs="unbounded">
								<xs:element name="VToken">
									<xs:complexType>
										<xs:complexContent>
											<xs:extension base="VTokenStructure">
												<xs:attribute name="Status" use="required">
													<xs:simpleType>
														<xs:restriction base="xs:token">
															<xs:enumeration value="voted"/>
															<xs:enumeration value="unvoted"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
								<xs:element name="VTokenQualified">
									<xs:complexType>
										<xs:complexContent>
											<xs:extension base="VTokenQualifiedStructure">
												<xs:attribute name="Status" use="required">
													<xs:simpleType>
														<xs:restriction base="xs:token">
															<xs:enumeration value="voted"/>
															<xs:enumeration value="unvoted"/>
															<xs:enumeration value="withdrawn"/>
														</xs:restriction>
													</xs:simpleType>
												</xs:attribute>
											</xs:extension>
										</xs:complexContent>
									</xs:complexType>
								</xs:element>
							</xs:choice>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="AuditInformation" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
