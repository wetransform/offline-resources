<?xml version="1.0" encoding="utf-8"?>
<!--
     Election Markup Language (EML) Specification Version 7.0
     Committee Specification (CS) 01
     27 October 2011
     Copyright (c) OASIS Open 2011. All Rights Reserved.
     Source: http://docs.oasis-open.org/election/eml/v7.0/cs01/Schemas/
-->
<!--
  EML 110 Schema - Election Event

  History: 4.0 Edited by Paul Spencer (Boynings Consulting) 2005/2006
                - major release revision

           5.0 Edited by David RR Webber 2007-02-13
           - maxWriteIn definition
           - VotingMethod - made repeatable
           5.0 Edited by David RR Webber 2007-05-25
           - added ResultsReported structure to ReportingUnit and PollingPlace
           5.0 Edited by David RR Webber 2007-06-29
           - added CountMetric definitions support for results reporting
           6.0 Edited by David RR Webber 2008-11-10 and 2009-04-13
           - updates for CIQ v3 schemas
           - added Results reporting start, end range
           - added OfficialStatusDetail
	7.0 Changes March/May, 2011
	- added ElectionAdministration structure
  -->
<xs:schema targetNamespace="urn:oasis:names:tc:evs:schema:eml" elementFormDefault="qualified"
	attributeFormDefault="unqualified" version="7.0" id="eml-110"
	xmlns="urn:oasis:names:tc:evs:schema:eml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:annotation>
		<xs:documentation> 
			Specification Name: OASIS EML TC - Election Markup Language (EML) 
			Description: This schema here is a member of a library of the XML schemas used in EML. The XML schemas define the formal structures of the election data that can be processed.
			Produced by: OASIS Election Technical Committee
			URL: http://www.oasis-open.org/committees/election
			Version: 7.0  
			Status: Committee Draft 
			Copyright: 2001-11, OASIS, http://www.oasis-open.org
			Conformance: This is a base implementation schema - actual localization schema for use may be derived from this schema - but may not contradict the structure definitions provided here.
		</xs:documentation>
	</xs:annotation>
	<xs:include schemaLocation="110-505-include-v7-0.xsd"/>
	<xs:element name="EML">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="EMLstructure">
					<xs:sequence>
						<xs:element ref="ElectionEvent"/>
					</xs:sequence>
					<xs:attribute name="Id" fixed="110" use="required"/>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
		<!-- xs:unique name="DisplayOrder">
			<xs:selector xpath=".//*"/>
			<xs:field xpath="@DisplayOrder"/>
		</xs:unique -->
	</xs:element>
	<xs:element name="ElectionEvent">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ElectionControl" minOccurs="1" maxOccurs="1"/>
				<xs:element ref="ElectionAdministration" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="ElectionParticipation" minOccurs="0" maxOccurs="1"/>
				<xs:element name="Election" maxOccurs="unbounded">
					<xs:complexType>
						<xs:sequence>
							<xs:element ref="ElectionIdentifier"/>
							<xs:element name="Description" type="MessagesStructure" minOccurs="0"/>
							<xs:element name="Date" type="ComplexDateRangeStructure" minOccurs="0"
								maxOccurs="unbounded"/>
							<xs:element ref="OfficialStatusDetail" minOccurs="0"/>
							<xs:element ref="ManagingAuthority" minOccurs="0"/>
							<xs:element name="VoterParticipationType" minOccurs="0"
								maxOccurs="unbounded">
								<xs:annotation>
									<xs:documentation>Denotes voter participation requirements.</xs:documentation>
								</xs:annotation>
								<xs:simpleType>
									<xs:restriction base="xs:token">
										<xs:enumeration value="optional"/>
										<xs:enumeration value="required"/>
										<xs:enumeration value="membership"/>
										<xs:enumeration value="open"/>
										<xs:enumeration value="party"/>
										<xs:enumeration value="exemptions"/>
									</xs:restriction>
								</xs:simpleType>
							</xs:element>
							<xs:element ref="DocumentIdentifier" minOccurs="0" maxOccurs="unbounded"/>
							<xs:element name="Contest" maxOccurs="unbounded">
								<xs:complexType>
									<xs:sequence>
										<xs:element ref="ContestIdentifier"/>
										<xs:element name="ReportingUnit" minOccurs="0"
											maxOccurs="unbounded">
											<xs:complexType>
												<xs:sequence>
												<xs:element ref="ReportingUnitIdentifier"
												maxOccurs="unbounded"/>
												<xs:element ref="ResponsibleOfficer" minOccurs="0"
												maxOccurs="unbounded"/>
												<xs:element name="ResultsReported"
												type="ResultsReportedStructure" minOccurs="0"
												maxOccurs="unbounded"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
										<xs:element ref="Area" minOccurs="0"/>
										<xs:element name="AllowedChannels" minOccurs="0">
											<xs:complexType>
												<xs:sequence>
												<xs:element name="Channel" maxOccurs="unbounded">
												<xs:complexType>
												<xs:sequence>
												<xs:element name="ChannelName"
												type="VotingChannelType"/>
												<xs:element name="AuthenticationMethod"
												type="xs:token" minOccurs="0"
												maxOccurs="unbounded"/>
												<xs:element name="ResponseMethod" type="xs:token"
												minOccurs="0"/>
												<xs:element name="ChannelDate"
												type="SimpleDateRangeStructure" minOccurs="0"
												maxOccurs="unbounded"/>
												</xs:sequence>
												</xs:complexType>
												</xs:element>
												</xs:sequence>
												<xs:attribute name="DisplayOrder"
												type="xs:positiveInteger" use="optional"/>
											</xs:complexType>
										</xs:element>
										<xs:element ref="ManagingAuthority" minOccurs="0"/>
										<xs:element ref="Position" minOccurs="0"/>
										<xs:element name="Description" type="MessagesStructure"
											minOccurs="0"/>
										<xs:element ref="VotingMethod" minOccurs="1"
											maxOccurs="unbounded"/>
										<xs:element ref="CountingAlgorithm" minOccurs="0"/>
										<xs:element ref="CountMetric" minOccurs="0"
											maxOccurs="unbounded"/>
										<xs:element ref="BallotIdentifierRange" minOccurs="0"/>
										<xs:element ref="MaxVotes"/>
										<xs:element ref="MinVotes" minOccurs="0"/>
										<xs:element name="MaxWriteIn" type="xs:positiveInteger"
											minOccurs="0"/>
										<xs:element ref="NumberOfPositions" minOccurs="0"/>
										<xs:element id="d2e3681" maxOccurs="1" minOccurs="0"
											name="Rotation" type="YesNoType"/>
										<xs:element id="d2e3698" maxOccurs="1" minOccurs="0"
											name="RotationMethod" type="RotationMethodDefinition"/>
										<xs:element ref="PollingPlace" minOccurs="0"
											maxOccurs="unbounded"/>
										<xs:element name="Messages" type="MessagesStructure"
											minOccurs="0"/>
										<xs:any namespace="##other" minOccurs="0"
											maxOccurs="unbounded"/>
									</xs:sequence>
									<xs:attribute name="DisplayOrder" type="xs:positiveInteger"
										use="optional"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="Messages" type="MessagesStructure" minOccurs="0"/>
							<xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
				<xs:element name="EventDate" type="SimpleDateRangeStructure" minOccurs="0"/>
				<xs:element name="ResultsReporting" type="SimpleDateRangeStructure" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Allows control over when results are made public, and then optionally when that information is taken back down. Applies particularly to private member elections.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="Messages" type="MessagesStructure" minOccurs="0"/>
				<xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:simpleType name="RotationMethodDefinition">
		<xs:annotation>
			<xs:documentation>The type for RotationMethod.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:token"/>
	</xs:simpleType>
</xs:schema>
